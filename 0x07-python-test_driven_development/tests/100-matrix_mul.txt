#Matrix Multiplication

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

# Test Case 1
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

#Test Case 2
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

# Test Case 3
>>> matrix_mul("string", [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list

# Test Case 4
>>> matrix_mul([[1, 2], [3, 4]], "string")
Traceback (most recent call last):
	...
TypeError: m_b must be a list

# Test Case 5
>>> matrix_mul([1, 2], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list of lists

#Test Case 6
>>> matrix_mul([[1, 2], [3, 4]], [5, 6])
Traceback (most recent call last):
	...
TypeError: m_b must be a list of lists

# Test Case 7
>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: m_a can't be empty

# Test Case 8
>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
	...
ValueError: m_b can't be empty

# Test Case 9
>>> matrix_mul([[1, 2], [3, 'x']], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a should contain only integers or floats

#Test Case 10
>>> matrix_mul([[1, 2], [3, 4]], [[1, 'x'], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_b should contain only integers or floats

#Test Case 11
>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: each row of m_a must be of the same size

#Test Case 12
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5]])
Traceback (most recent call last):
	...
TypeError: each row of m_b must be of the same size

