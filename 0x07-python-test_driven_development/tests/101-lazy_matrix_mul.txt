#Matrix Multiplication using Numpy

>>> import numpy as np

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

# Test Case 1
#>>> m_a = np.array([[1, 2], [3, 4]])
#>>> m_b = np.array([[1, 2], [3, 4]])
#>>> lazy_matrix_mul(m_a, m_b)
#[[ 7 10]
# [15 22]]

# Test Case 3
>>> m_a = "string"
>>> m_b = np.array([[1, 2], [3, 4]])
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
TypeError: m_a must be a list

# Test Case 4
#>>> m_a = np.array([[1, 2], [3, 4]])
#>>> m_b = np.array([5, 6])
#>>> lazy_matrix_mul(m_a, m_b)
#Traceback (most recent call last):
#	...
#TypeError: m_b must be a list of lists

#Test Case 5
#>>> m_a = np.empty((2, 2))
#>>> m_b = np.array([[1, 2], [3, 4]])
#>>> lazy_matrix_mul(m_a, m_b)
#Traceback (most recent call last):
#	...
#ValueError: m_a can't be empty

#Test Case 6
#>>> m_a = np.array([[1, 2], [3, 4]])
#>>> m_b = np.array([[1, 2], ['x', 4]])
#>>> lazy_matrix_mul(m_a, m_b)
#Traceback (most recent call last):
#	...
#TypeError: m_b should contain only integers or floats

#Test Case 7
#>>> m_a = np.array([[1, 2, 3], [4, 5]])
#>>> m_b = np.array([[1, 2], [4, 5]])
#>>> lazy_matrix_mul(m_a, m_b)
#Traceback (most recent call last):
#	...
#TypeError: each row of m_a must be of the same size

# Test Case 8
#>>> m_a = np.empty((0, 2))
#>>> m_b = np.empty((0, 3))
#>>> lazy_matrix_mul(m_a, m_b)
#Traceback (most recent call last):
#	...
#ValueError: m_a and m_b can't be multiplied
